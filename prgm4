Step 2: Update pom.xml to Add Build Plugin
To compile and package your project into a .jar file, you need to add the Maven Compiler and Jar plugins. 🔧
1. Open the pom.xml file. 📄
2. Add the following inside the <project> tag:
1 <build>
2 <plugins>
3 <!-- Compiler Plugin -->
4 <plugin>
5 <groupId>org.apache.maven.plugins</groupId>
6 <artifactId>maven-compiler-plugin</artifactId>
7 <version>3.8.1</version>
8 <configuration>
9 <source>1.8</source>

🔨 Step 3: Build and Run the Maven Project
1. Open IntelliJ IDEA Terminal
Press Alt + F12 to open the terminal. 🖥️
2. Compile and Package the Project
Run the following commands to build the project:
3. Locate the JAR File
After running the above, your .jar file will be located at:
D:\Idea Projects\MVNGRDLDEMO\target\MVNGRDLDEMO-1.0-SNAPSHOT.jar


4. Run the JAR File
java -jar target\MVNGRDLDEMO-1.0-SNAPSHOT.jar
To run the generated JAR file, use:
🚀 Part 2: Migrate Maven Project to Gradle
🔄 Step 1: Initialize Gradle in Your Project
1. Open Terminal in IntelliJ IDEA
Make sure you're in the project directory
cd "D:\Idea Projects\MVNGRDLDEMO"
Run Gradle Init Command
Execute the following command to migrate your Maven project to Gradle:
gradle init --type pom

Step 2: Review and Update build.gradle
1. Open build.gradle in IntelliJ IDEA.
2. Ensure the following configurations are correct
plugins {
2 id 'java'
3 }
4
5 group = 'com.example'
6 version = '1.0-SNAPSHOT'
7
8 repositories {
9 mavenCentral()
10 }
11
12 dependencies {
13 testImplementation 'junit:junit:4.13.2'
14 }
15
16 jar {
17 manifest {
18 attributes(
19 'Main-Class': 'com.example.App'
20 )
21 }
22 }
23
Step 3: Build and Run the Gradle Project
1. Clean and Build the Project
To clean and build your Gradle project, run:
Run the Generated JAR File
java -jar build/libs/MVNGRDLDEMO-1.0-SNAPSHOT.jar


